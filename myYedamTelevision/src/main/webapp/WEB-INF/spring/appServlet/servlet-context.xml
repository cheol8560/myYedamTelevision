<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Binding bean 생성 -->
	<!-- 
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="webBindingInitializer">
			<beans:bean class="yolo.myTv.util.MyTvBindingInitializer" />
		</beans:property>
	</beans:bean>
	 -->
	<!-- End Binding bean 생성 -->
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	 <resources mapping="/resources/**" location="/resources/" />
	 <resources mapping="/assets/**" location="/assets/" />
	 <resources mapping="/assetsAdmin/**" location="/assetsAdmin/" />
	 <resources mapping="/include/**" location="/include/" />
	 <resources mapping="/img/**" location="/img/" />
	<!-- <default-servlet-handler/> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Tiles View Resolver -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1"
		p:viewClass="org.springframework.web.servlet.view.tiles3.TilesView" />
		<!--Don't add suffix or prefix like you do with .jsp files-->
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" >
		<beans:property name="definitions">
			<beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
		</beans:property>
	</beans:bean>
	<!-- End Tiles View Resolver -->	
	
	<!-- MultipartResolver 설정-->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10000000" />
		<beans:property name="maxInMemorySize" value="10000000" />
	</beans:bean>
	<!-- End MultipartResolver 설정-->

	<!-- 로그인 체크 interceptors -->
	<interceptors>
		<interceptor>
			<mapping path="/*.do" />
			<mapping path="/admin/*.do" />
			<exclude-mapping path="/login.do" />
			<exclude-mapping path="/getOnBroadcastList.do" />
			<exclude-mapping path="/chk*.do" />
			<exclude-mapping path="/memberInsert.do" />
			<exclude-mapping path="/sendMail.do" />
			<beans:bean class="yolo.myTv.util.AuthenticInterceptor" />
		</interceptor>
	</interceptors>
	<!-- End 로그인 체크 interceptors -->
	
	<context:component-scan base-package="yolo.myTv" />

	
</beans:beans>
