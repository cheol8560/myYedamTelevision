<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="yolo.myTv.exchanges.service.impl.ExchangeMapper">

	<resultMap type="exchange" id="exchangeMap">
		<result property="exchangeNo" column="EXCHANGE_NO" />
		<result property="memberId" column="MEMBER_ID" />
		<result property="requestDate" column="REQUEST_DATE" />
		<result property="requestPoint" column="REQUEST_POINT" />
		<result property="realReceipt" column="REAL_RECEIPT" />
		<result property="commission" column="COMMISSION" />
		<result property="approveDate" column="APPROVE_DATE" />
		<result property="approveStatus" column="APPROVE_STATUS" />
	</resultMap>

	<insert id="insertExchange" parameterType="exchange">
		<selectKey keyProperty="exchangeNo" resultType="int" order="BEFORE">
			SELECT NVL(MAX(EXCHANGE_NO), 0) + 1 FROM EXCHANGES
		</selectKey>

		INSERT INTO EXCHANGES(EXCHANGE_NO
		, REQUEST_DATE
		, REQUEST_POINT
		, COMMISSION
		, REAL_RECEIPT
		, APPROVE_STATUS
		, MEMBER_ID)
		VALUES(#{exchangeNo}
		, sysdate
		, #{requestPoint}
		, (#{requestPoint} * 10)
		, (#{requestPoint} * 100) - (#{requestPoint} * 10)
		, 'b1'
		, #{memberId})

	</insert>

	<update id="updateExchange"> 
        <![CDATA[
        UPDATE MEMBERS SET
        		POINT = POINT - #{requestPoint}
        WHERE MEMBER_ID = #{memberId}
        
        ]]>
	</update>
	<update id="approveUpdate">
        <![CDATA[
        UPDATE CHARGES SET
        		APPROVE_STATUS = '0bb2'
        		, APPROVE_DATE = SYSDATE
        WHERE CHARGE_NO = #{chargeNo}
        ]]>
	</update>

	<select id="getExchange" resultType="map">
		SELECT EXCHANGE_NO 			"exchangeNo"
				, REQUEST_DATE		"requestDate"
				, REQUEST_POINT		"requestPoint"
				, COMMISSION		"commission"
				, REAL_RECEIPT		"realReceipt"
				, APPROVE_STATUS	"approveStatus"
				, APPROVE_DATE		"approveDate"
				, MEMBER_ID			"memberId"
				,(SELECT NVL(SUM(REQUEST_POINT),0)
				  FROM EXCHANGES
				  WHERE MEMBER_ID = #{memberId}) as "totalRequest"
		FROM EXCHANGES
		WHERE EXCHANGE_NO = #{exchangeNo}
	</select>

	<select id="ExchangeList" resultMap="exchangeMap">
        
        SELECT	EXCHANGE_NO
        		, REQUEST_DATE
        		, REQUEST_POINT
        		, COMMISSION
      			, REAL_RECEIPT
        FROM EXCHANGES
        WHERE MEMBER_ID = #{memberId}
        order by EXCHANGE_NO desc
      
	</select>



</mapper>
